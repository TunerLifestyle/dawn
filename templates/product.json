{
  "sections": {
    "main": {
      "type": "main-product",
      "blocks": {
        "vendor": {
          "type": "text",
          "settings": {
            "text": "{{ product.vendor }}",
            "text_style": "uppercase"
          }
        },
        "title": {
          "type": "title",
          "settings": {
          }
        },
        "caption": {
          "type": "text",
          "settings": {
            "text": "{{ product.metafields.descriptors.subtitle.value }}",
            "text_style": "subtitle"
          }
        },
        "price": {
          "type": "price",
          "settings": {
          }
        },
        "variant_picker": {
          "type": "variant_picker",
          "settings": {
            "picker_type": "dropdown"
          }
        },
        "quantity_selector": {
          "type": "quantity_selector",
          "settings": {
          }
        },
        "buy_buttons": {
          "type": "buy_buttons",
          "settings": {
            "show_dynamic_checkout": true,
            "show_gift_card_recipient": false
          }
        },
        "description": {
          "type": "description",
          "settings": {
          }
        },
        "collapsible-row-0": {
          "type": "collapsible_tab",
          "settings": {
            "heading": "Materials",
            "icon": "leather",
            "content": "",
            "page": ""
          }
        },
        "collapsible-row-1": {
          "type": "collapsible_tab",
          "settings": {
            "heading": "Shipping & Returns",
            "icon": "truck",
            "content": "",
            "page": ""
          }
        },
        "collapsible-row-2": {
          "type": "collapsible_tab",
          "settings": {
            "heading": "Dimensions",
            "icon": "ruler",
            "content": "",
            "page": ""
          }
        },
        "collapsible-row-3": {
          "type": "collapsible_tab",
          "settings": {
            "heading": "Care Instructions",
            "icon": "heart",
            "content": "",
            "page": ""
          }
        },
        "share": {
          "type": "share",
          "settings": {
            "share_label": "Share"
          }
        },
        "94dac63c-771b-4b23-84fc-5e13c8dbe5c4": {
          "type": "custom_liquid",
          "settings": {
            "custom_liquid": "<script language=\"javascript\" type=\"text\/javascript\">\nconst pickerType = (document.querySelector('variant-radios')) ? 'radios' : 'selects';\nconst variantSelects = (pickerType == 'radios') ? document.querySelector('variant-radios') : document.querySelector('variant-selects');\nconst fieldsets = (pickerType == 'radios') ? Array.from(variantSelects.querySelectorAll('fieldset')) : Array.from(variantSelects.querySelectorAll('.product-form__input--dropdown'));\nconst productJson = JSON.parse(variantSelects.querySelector('[type=\"application\/json\"]').textContent);\nlet selectedOptions = [];\n\nvariantSelects.addEventListener('change', rebuildOptions);\nthis.rebuildOptions();\n\n\/\/ gather a list of valid combinations of options, check to see if the input passed to it matches in a chain of valid options.\nfunction validCombo(inputValue, optionLevel) {\n  for(let i = 0; i < productJson.length; i++) {\n    if(optionLevel == 1){\n      if (productJson[i].option1 == selectedOptions[0] && productJson[i].option2 == inputValue) { return true; }\n    } else {\n      if (productJson[i].option1 == selectedOptions[0] && productJson[i].option2 == selectedOptions[1] && productJson[i].option3 == inputValue) { return true; }\n    }\n  }\n  return false;\n}\n\nfunction rebuildOptions() {\n  selectedOptions = fieldsets.map((fieldset) => {\n    return (pickerType == 'radios') ? Array.from(fieldset.querySelectorAll('input')).find((radio) => radio.checked).value : Array.from(fieldset.querySelectorAll('select'), (select) => select.value);\n  });\n  \/\/loop through the option sets starting from the 2nd set and disable any invalid options\n  for(let optionLevel = 1, n = fieldsets.length; optionLevel < n; optionLevel++) {\n    const inputs = (pickerType == 'radios') ? fieldsets[optionLevel].querySelectorAll('input') : fieldsets[optionLevel].querySelectorAll('option');\n\n    inputs.forEach(input => {\n      input.disabled = (validCombo(input.value,optionLevel)) ? false : true;\n      if(pickerType == 'radios'){\n        \/\/get the label for the current input (this is what the user clicks, the \"pill\")\n        const label = fieldsets[optionLevel].querySelector(`label[for=\"${input.id}\"]`);\n\n        label.style.display = (input.disabled) ? \"none\" : \"\"; \/\/Hide the option, or comment this line out and use the following lines to style it..\n        \/\/label.style.opacity = (input.disabled) ? 0.5 : 1;\n        \/\/label.style.borderStyle = (input.disabled) ? \"dashed\" : \"solid\";\n        \/\/label.style.textDecoration = (input.disabled) ? \"none\" : \"\";\n      } else {\n        input.hidden = (validCombo(input.value,optionLevel)) ? false : true;\n      }\n    });\n  }\n\n  \/\/if the default selected option is disabled with the function above, select the first available option instead\n  for (let optionLevel = 1, fieldsetsLength = fieldsets.length, change = false; optionLevel < fieldsetsLength && !change; optionLevel++) {\n    if(pickerType == 'radios'){\n      if(fieldsets[optionLevel].querySelector('input:checked').disabled === true) {\n        change = (fieldsets[optionLevel].querySelector('input:not(:disabled)').checked = true);\n      }\n    } else {\n      if(fieldsets[optionLevel].querySelector('option:checked').disabled === true) {\n        change = (fieldsets[optionLevel].querySelector('option:not(:disabled)').selected = \"selected\");\n      }\n    }\n    \/\/if a new option has been selected, restart the whole process\n    if(change) variantSelects.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n}\n<\/script>"
          }
        }
      },
      "block_order": [
        "vendor",
        "title",
        "caption",
        "price",
        "variant_picker",
        "quantity_selector",
        "buy_buttons",
        "description",
        "collapsible-row-0",
        "collapsible-row-1",
        "collapsible-row-2",
        "collapsible-row-3",
        "share",
        "94dac63c-771b-4b23-84fc-5e13c8dbe5c4"
      ],
      "settings": {
        "enable_sticky_info": true,
        "media_size": "medium",
        "constrain_to_viewport": true,
        "media_fit": "contain",
        "gallery_layout": "thumbnail_slider",
        "media_position": "left",
        "image_zoom": "lightbox",
        "mobile_thumbnails": "show",
        "hide_variants": false,
        "enable_video_looping": false,
        "padding_top": 36,
        "padding_bottom": 12
      }
    },
    "related-products": {
      "type": "related-products",
      "settings": {
        "heading": "You may also like",
        "heading_size": "h2",
        "products_to_show": 4,
        "columns_desktop": 4,
        "color_scheme": "background-1",
        "image_ratio": "square",
        "image_shape": "default",
        "show_secondary_image": true,
        "show_vendor": false,
        "show_rating": false,
        "columns_mobile": "2",
        "padding_top": 36,
        "padding_bottom": 28
      }
    }
  },
  "order": [
    "main",
    "related-products"
  ]
}
